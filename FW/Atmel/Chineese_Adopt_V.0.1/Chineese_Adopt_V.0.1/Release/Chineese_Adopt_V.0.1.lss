
Chineese_Adopt_V.0.1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000016a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001be  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001f0  2**2
                  CONTENTS, READONLY
  4 .debug_info   000005f4  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000005a2  00000000  00000000  00000824  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000133  00000000  00000000  00000dc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000208  00000000  00000000  00000ef9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e6       	ldi	r30, 0x6A	; 106
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 4b 00 	call	0x96	; 0x96 <main>
  8e:	0c 94 b3 00 	jmp	0x166	; 0x166 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <main>:
  96:	80 e8       	ldi	r24, 0x80	; 128
  98:	95 e2       	ldi	r25, 0x25	; 37
  9a:	0e 94 52 00 	call	0xa4	; 0xa4 <USART_Init>
  9e:	80 e0       	ldi	r24, 0x00	; 0
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	08 95       	ret

000000a4 <USART_Init>:
  a4:	cf 93       	push	r28
  a6:	df 93       	push	r29
  a8:	1f 92       	push	r1
  aa:	cd b7       	in	r28, 0x3d	; 61
  ac:	de b7       	in	r29, 0x3e	; 62
  ae:	9c 01       	movw	r18, r24
  b0:	40 e0       	ldi	r20, 0x00	; 0
  b2:	50 e0       	ldi	r21, 0x00	; 0
  b4:	60 e2       	ldi	r22, 0x20	; 32
  b6:	71 ea       	ldi	r23, 0xA1	; 161
  b8:	87 e0       	ldi	r24, 0x07	; 7
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	0e 94 72 00 	call	0xe4	; 0xe4 <__divmodsi4>
  c0:	21 50       	subi	r18, 0x01	; 1
  c2:	29 83       	std	Y+1, r18	; 0x01
  c4:	89 81       	ldd	r24, Y+1	; 0x01
  c6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
  ca:	89 81       	ldd	r24, Y+1	; 0x01
  cc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  d0:	88 e1       	ldi	r24, 0x18	; 24
  d2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  d6:	8e e0       	ldi	r24, 0x0E	; 14
  d8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  dc:	0f 90       	pop	r0
  de:	df 91       	pop	r29
  e0:	cf 91       	pop	r28
  e2:	08 95       	ret

000000e4 <__divmodsi4>:
  e4:	05 2e       	mov	r0, r21
  e6:	97 fb       	bst	r25, 7
  e8:	1e f4       	brtc	.+6      	; 0xf0 <__divmodsi4+0xc>
  ea:	00 94       	com	r0
  ec:	0e 94 89 00 	call	0x112	; 0x112 <__negsi2>
  f0:	57 fd       	sbrc	r21, 7
  f2:	07 d0       	rcall	.+14     	; 0x102 <__divmodsi4_neg2>
  f4:	0e 94 91 00 	call	0x122	; 0x122 <__udivmodsi4>
  f8:	07 fc       	sbrc	r0, 7
  fa:	03 d0       	rcall	.+6      	; 0x102 <__divmodsi4_neg2>
  fc:	4e f4       	brtc	.+18     	; 0x110 <__divmodsi4_exit>
  fe:	0c 94 89 00 	jmp	0x112	; 0x112 <__negsi2>

00000102 <__divmodsi4_neg2>:
 102:	50 95       	com	r21
 104:	40 95       	com	r20
 106:	30 95       	com	r19
 108:	21 95       	neg	r18
 10a:	3f 4f       	sbci	r19, 0xFF	; 255
 10c:	4f 4f       	sbci	r20, 0xFF	; 255
 10e:	5f 4f       	sbci	r21, 0xFF	; 255

00000110 <__divmodsi4_exit>:
 110:	08 95       	ret

00000112 <__negsi2>:
 112:	90 95       	com	r25
 114:	80 95       	com	r24
 116:	70 95       	com	r23
 118:	61 95       	neg	r22
 11a:	7f 4f       	sbci	r23, 0xFF	; 255
 11c:	8f 4f       	sbci	r24, 0xFF	; 255
 11e:	9f 4f       	sbci	r25, 0xFF	; 255
 120:	08 95       	ret

00000122 <__udivmodsi4>:
 122:	a1 e2       	ldi	r26, 0x21	; 33
 124:	1a 2e       	mov	r1, r26
 126:	aa 1b       	sub	r26, r26
 128:	bb 1b       	sub	r27, r27
 12a:	fd 01       	movw	r30, r26
 12c:	0d c0       	rjmp	.+26     	; 0x148 <__udivmodsi4_ep>

0000012e <__udivmodsi4_loop>:
 12e:	aa 1f       	adc	r26, r26
 130:	bb 1f       	adc	r27, r27
 132:	ee 1f       	adc	r30, r30
 134:	ff 1f       	adc	r31, r31
 136:	a2 17       	cp	r26, r18
 138:	b3 07       	cpc	r27, r19
 13a:	e4 07       	cpc	r30, r20
 13c:	f5 07       	cpc	r31, r21
 13e:	20 f0       	brcs	.+8      	; 0x148 <__udivmodsi4_ep>
 140:	a2 1b       	sub	r26, r18
 142:	b3 0b       	sbc	r27, r19
 144:	e4 0b       	sbc	r30, r20
 146:	f5 0b       	sbc	r31, r21

00000148 <__udivmodsi4_ep>:
 148:	66 1f       	adc	r22, r22
 14a:	77 1f       	adc	r23, r23
 14c:	88 1f       	adc	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	1a 94       	dec	r1
 152:	69 f7       	brne	.-38     	; 0x12e <__udivmodsi4_loop>
 154:	60 95       	com	r22
 156:	70 95       	com	r23
 158:	80 95       	com	r24
 15a:	90 95       	com	r25
 15c:	9b 01       	movw	r18, r22
 15e:	ac 01       	movw	r20, r24
 160:	bd 01       	movw	r22, r26
 162:	cf 01       	movw	r24, r30
 164:	08 95       	ret

00000166 <_exit>:
 166:	f8 94       	cli

00000168 <__stop_program>:
 168:	ff cf       	rjmp	.-2      	; 0x168 <__stop_program>
